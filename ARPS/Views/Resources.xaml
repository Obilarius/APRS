<UserControl x:Class="ARPS.Views.Resources"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ARPS"
             xmlns:viewModels="clr-namespace:ARPS.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000">

    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <TreeView x:Name="treeView_Directorys" Grid.Column="0" ItemsSource="{Binding Items}" BorderThickness="0" Margin="0 0 7 0" Padding="0 10">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Padding" Value="1,0,0,0"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19" Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                    <Border x:Name="Bd" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <!--<StackPanel Orientation="Horizontal" MouseLeftButtonUp="ListView_MouseLeftButtonUp" Background="Lime">
                        <Image Width="20" Margin="2" Source="{Binding Item.Type, Converter={x:Static local:HeaderToImageConverter.Instance}}"/>
                        <TextBlock VerticalAlignment="Center" Margin="0 0 20 0" Text="{Binding Name}" Background="Aqua" HorizontalAlignment="Right"/>
                    </StackPanel>-->
                    <Grid MouseLeftButtonUp="ListView_MouseLeftButtonUp" MouseLeftButtonDown="ListView_MouseLeftButtonUp" Margin="0 0 20 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" Width="20" Margin="2" Source="{Binding Item.Type, Converter={x:Static local:HeaderToImageConverter.Instance}}"/>
                        <TextBlock Grid.Column="1" Margin="0 0 20 0" Text="{Binding Name}" VerticalAlignment="Stretch" Padding="5 4 0 0"/>
                        <TextBlock Grid.Column="2" Text="{Binding ReadableSize}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <!-- Splitter-->
        <GridSplitter Grid.Column="0" BorderBrush="{StaticResource ArgesGrauBlau_hell}" BorderThickness="4"></GridSplitter>

        <!-- Rechte Seite - Infos -->
        <DockPanel Grid.Column="1">
            <!-- 1. Row - Folder and Path -->
            <Grid DockPanel.Dock="Top" Margin="0 7">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0" Height="25" Source="{StaticResource Img_Folder}"/>
                <StackPanel Grid.Column="1">
                    <Label Content="{Binding SelectedItem.Item.Name, FallbackValue=Ordnername}" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Top" 
                           FontSize="18" FontWeight="Bold" Foreground="{StaticResource ArgesBlau}"/>
                    <Label Content="{Binding SelectedItem.Item.FullPath, FallbackValue=Pfad}" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Foreground="{StaticResource ArgesBlau}"/>
                </StackPanel>
                <TextBlock Grid.Column="2" Text="{Binding SelectedItem.ReadableSize, FallbackValue=''}" FontSize="20" 
                           HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0 0 20 0" FontWeight="Bold" Foreground="{StaticResource ArgesBlau}"/>
            </Grid>

            <Border DockPanel.Dock="Top" BorderThickness="2" BorderBrush="{StaticResource ArgesGelb}" />

            <!-- 2. Row - Owner -->
            <Grid DockPanel.Dock="Top" Margin="0 0 0 10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="Besitzer" HorizontalAlignment="Left" VerticalAlignment="Center" 
                       FontWeight="Bold" Foreground="{StaticResource ArgesBlau}"/>
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="16"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" x:Name="img_OwnerIcon" Height="16" Width="16"/>
                    <Label Grid.Column="1" x:Name="lbl_OwnerName" Content="{Binding SelectedItem.OwnerNameWithPricipal, FallbackValue='Keinen Besitzer gefunden'}" HorizontalAlignment="Left"/>
                </Grid>
            </Grid>

            <!-- 3. Row - NTFS Access rights -->
            <!-- TODO -->

            <!-- 4. Row - Accounts with permissions -->
            <Grid DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Content="Konten mit Berechtigung" FontWeight="Bold" Foreground="{StaticResource ArgesBlau}" FontSize="18"/>
                <Label Grid.Column="1" Margin="0 0 0 0" Content="Anzahl Berechtigungen:" Foreground="{StaticResource ArgesBlau}" VerticalAlignment="Bottom"/>
                <Label Grid.Column="2" Margin="0 0 20 0" Content="{Binding SelectedItem.AllAuthorizedUserACE.Count, FallbackValue=-}" Foreground="{StaticResource ArgesBlau}" VerticalAlignment="Bottom"/>
            </Grid>



            <Border DockPanel.Dock="Top" BorderThickness="2" BorderBrush="{StaticResource ArgesGelb}"></Border>

            <!-- Account with permissions -->
            <DataGrid DockPanel.Dock="Top" ItemsSource="{Binding SelectedItem.AccountsWithPermission}" 
                      AutoGenerateColumns="False" IsReadOnly="True" GridLinesVisibility="Horizontal">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="" SortMemberPath="UserType" Width="30">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Width="20" Source="{Binding UserType, Converter={x:Static local:UserTypeToImageConverter.Instance}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    
                    <DataGridTextColumn Binding="{Binding IdentityName}" Header="Name"/>
                    
                    <DataGridTemplateColumn Header="Wie oft Berechtigt" SortMemberPath="Count">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="{Binding Count}" VerticalAlignment="Center"/>

                                    <Image Tag="{Binding Count}" Width="20" Height="20" Margin="10 0 0 0" Source="{StaticResource Img_Warning}">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <DataTrigger  Binding="{Binding Count}" Value="1">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                    </DataTrigger >
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>

                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Vererbt" SortMemberPath="InheritedCount">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding InheritedCount}" HorizontalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>



        </DockPanel>
    </Grid>

    

</UserControl>
