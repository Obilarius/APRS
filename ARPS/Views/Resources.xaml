<UserControl x:Class="ARPS.Views.Resources"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ARPS"
             xmlns:viewModels="clr-namespace:ARPS.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000">

    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <TreeView x:Name="treeView_Directorys" Grid.Column="0" ItemsSource="{Binding Items}" BorderThickness="0" Margin="0 0 7 0" Padding="0 10" Background="Pink">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Padding" Value="1,0,0,0"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19" Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                    <Border x:Name="Bd" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <!--<StackPanel Orientation="Horizontal" MouseLeftButtonUp="ListView_MouseLeftButtonUp" Background="Lime">
                        <Image Width="20" Margin="2" Source="{Binding Item.Type, Converter={x:Static local:HeaderToImageConverter.Instance}}"/>
                        <TextBlock VerticalAlignment="Center" Margin="0 0 20 0" Text="{Binding Name}" Background="Aqua" HorizontalAlignment="Right"/>
                    </StackPanel>-->
                    <Grid Background="Beige" MouseLeftButtonUp="ListView_MouseLeftButtonUp">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="150"/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" Width="20" Margin="2" Source="{Binding Item.Type, Converter={x:Static local:HeaderToImageConverter.Instance}}"/>
                        <TextBlock Grid.Column="1" Background="Aquamarine" VerticalAlignment="Center" Margin="0 0 20 0" Text="{Binding Name}"/>
                        <TextBlock Grid.Column="2" Text="{Binding Item.Size}" Background="PowderBlue" VerticalAlignment="Center"/>
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <!-- Splitter-->
        <GridSplitter Grid.Column="0" BorderBrush="{StaticResource ArgesGrauBlau_hell}" BorderThickness="4"></GridSplitter>

        <!-- Rechte Seite - Infos -->
        <DockPanel Grid.Column="1">
            <!-- 1. Row - Folder and Path -->
            <Grid DockPanel.Dock="Top" Margin="0 7">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0" Height="25" Source="{StaticResource Img_Folder}"/>
                <StackPanel Grid.Column="1">
                    <Label x:Name="lbl_FolderName" Content="{Binding SelectedItem.Item.Name, FallbackValue=Ordnername}" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Top" 
                           FontSize="18" FontWeight="Bold" Foreground="{StaticResource ArgesBlau}"/>
                    <Label x:Name="lbl_FolderPath" Content="{Binding SelectedItem.Item.FullPath, FallbackValue=Pfad}" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Foreground="{StaticResource ArgesBlau}"/>
                </StackPanel>
            </Grid>

            <TextBox DockPanel.Dock="Top"/>
        </DockPanel>
    </Grid>

    

</UserControl>
