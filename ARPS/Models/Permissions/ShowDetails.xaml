<controls:MetroWindow x:Class="ARPS.Models.Permissions.ShowDetails"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:local="clr-namespace:ARPS.Models.Permissions"
        xmlns:arps="clr-namespace:ARPS"
        mc:Ignorable="d"
        Title="Details" Height="715" Width="850" ResizeMode="CanResize">

    <Window.Resources>
        <Style TargetType="ToolTip">
            <Style.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="TextWrapping" Value="Wrap" />
                    <Setter Property="MaxWidth" Value="500"/>
                </Style>
            </Style.Resources>
            <!--<Setter Property="MaxWidth" Value="500" />-->
            <Setter Property="Background" Value="{StaticResource ArgesGrauBlau_mittel}"/>
            <Setter Property="MaxWidth" Value="500"/>
            <!--<Setter Property="Foreground" Value="White"/>-->
        </Style>
    </Window.Resources>
    
    


    <StackPanel Margin="10">
        <!-- Ordner Infos -->
        <Border BorderBrush="{StaticResource ArgesGrauBlau_dunkel}" BorderThickness="2" Padding="10">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Image Grid.Column="0" Height="25" Source="{Binding ItemType, Converter={x:Static arps:HeaderToImageConverter.Instance}}"/>
                <StackPanel Grid.Column="1">
                    <TextBlock Text="{Binding FolderName, FallbackValue=Foldername}" FontSize="18" FontWeight="Bold" Foreground="{StaticResource ArgesBlau}"/>

                    <TextBlock Text="{Binding UncPath, FallbackValue=UNCPfad}" Foreground="{StaticResource ArgesBlau}" Margin="0 5 0 0"/>

                    <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                        <TextBlock Text="Besitzer:" Foreground="{StaticResource ArgesBlau}"/>
                        
                        <Image Height="16" Width="16" Source="{Binding Owner.Type, Converter={x:Static arps:UserTypeToImageConverter.Instance}}" Margin="10 0 5 0"/>
                        <TextBlock Text="{Binding Owner}" Foreground="{StaticResource ArgesBlau}" Margin="0 0 10 0"/>
                        <TextBlock Text="{Binding OwnerSid, StringFormat=({0})}" Foreground="{StaticResource ArgesBlau}" />
                    </StackPanel>
                </StackPanel>

                <TextBlock Grid.Column="3" Text="{Binding readableSize, FallbackValue=''}" FontSize="20" 
                           HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0 0 20 0" FontWeight="Bold" Foreground="{StaticResource ArgesBlau}"/>
                
                
            </Grid>


        </Border>

        <Border BorderBrush="{StaticResource ArgesGrauBlau_dunkel}" BorderThickness="2" Padding="10" Margin="0 10 0 0">
            <Grid Height="40">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Image Grid.Column="0" Source="{StaticResource Img_Folder}"/>
                <TextBlock Grid.Column="0" Text="{Binding EffectiveRight_ThisFolder}" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" FontSize="16"/>

                <Image Grid.Column="1" Source="{StaticResource Img_SubFolder}"/>
                <TextBlock Grid.Column="1" Text="{Binding EffectiveRight_Subfolder}" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" FontSize="16"/>

                <Image Grid.Column="2" Source="{StaticResource Img_File}"/>
                <TextBlock Grid.Column="2" Text="{Binding EffectiveRight_Files}" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" FontSize="16"/>

            </Grid>
        </Border>

        <!-- Grundlegende & Erweiterte Berechtigungen -->
        <Border BorderBrush="{StaticResource ArgesGrauBlau_dunkel}" BorderThickness="2" Padding="10" Margin="0 10 0 0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Grundlegende Berechtigungen -->
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Grundlegende Berechtigungen" Margin="0 0 20 10" FontWeight="Bold"/>

                <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasFullControl, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Vollzugriff"/>
                </StackPanel>

                <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasModify, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Ändern"/>
                </StackPanel>

                <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasReadAndExecute, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Lesen, Ausführen"/>
                </StackPanel>

                <StackPanel Grid.Row="4" Grid.Column="0" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasListDirectory, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Ordnerinhalt anzeigen"/>
                </StackPanel>

                <StackPanel Grid.Row="5" Grid.Column="0" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasRead, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Lesen"/>
                </StackPanel>

                <StackPanel Grid.Row="6" Grid.Column="0" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasWrite, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Schreiben"/>
                </StackPanel>

                <StackPanel Grid.Row="7" Grid.Column="0" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasSpecialPermissions, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Spezielle Berechtigung"/>
                </StackPanel>
                
                
                <!-- Erweiterte Berechtigung -->
                <TextBlock Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Text="Erweiterte Berechtigungen" Margin="0 0 20 10" FontWeight="Bold"/>

                <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasFullControl, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Vollzugriff"/>
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <TextBlock Text="Allows users to read, write, change, and delete files and subfolders. In addition, users can change permissions settings for all files and subdirectories."/>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>

                <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasExecuteFileTraverse, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Ordner durchsuchen / Datei ausführen"/>
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <StackPanel>
                                <TextBlock>
                                    <Bold>- Traverse Folder:</Bold> Allows or denies moving through a restricted folder to reach files and folders beneath the restricted folder in the folder hierarchy. Traverse folder takes effect only when the group or user is not granted the &quot;Bypass traverse checking user&quot; right in the Group Policy snap-in. This permission does not automatically allow running program files.
                                </TextBlock>
                                <TextBlock>
                                    <Bold>- Execute File:</Bold> Allows or denies running program (executable) files.
                                </TextBlock>
                            </StackPanel>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>

                <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasReadData, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Ordner auflisten / Daten lesen"/>
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <StackPanel>
                                <TextBlock>
                                    <Bold>- List Folder:</Bold> Allows or denies viewing file names and subfolder names within the folder. List Folder only affects the contents of that folder and does not affect whether the folder you are setting the permission on will be listed.
                                </TextBlock>
                                <TextBlock><Bold>- Read Data:</Bold> Allows or denies viewing data in files.</TextBlock>
                            </StackPanel>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>

                <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasReadAttributes, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Attribute lesen"/>
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <TextBlock Text="Allows or denies viewing the attributes of a file or folder, for example, &quot;read-only&quot; and &quot;hidden&quot;."/>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>

                <StackPanel Grid.Row="5" Grid.Column="1" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasReadExtendedAttributes, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Erweiterte Attribute lesen"/>
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <TextBlock Text="Allows or denies viewing the extended attributes of a file or folder. Extended attributes are defined by programs and may vary by program."/>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>

                <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasWriteDataCreateFiles, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Dateien erstellen / Daten schreiben"/>
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <StackPanel>
                                <TextBlock><Bold>- Create Files:</Bold> Allows or denies creating files within the folder.</TextBlock>
                                <TextBlock><Bold>- Write Data:</Bold> Allows or denies making changes to a file and overwriting existing content.</TextBlock>
                            </StackPanel>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>

                <StackPanel Grid.Row="7" Grid.Column="1" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasCreateDirectoryAppendData, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Ordner erstellen / Daten anhängen"/>
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <StackPanel>
                                <TextBlock><Bold>- Create Folders:</Bold> Allows or denies creating subfolders within the folder.</TextBlock>
                                <TextBlock><Bold>- Append Data:</Bold> Allows or denies making changes to the end of the file but not changing, deleting, or overwriting existing data.</TextBlock>
                            </StackPanel>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>
                
                <!-- Spalte 3 -->
                <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasWriteAttributes, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Attribute schreiben"/>
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <StackPanel>
                                <TextBlock Text="- Allows or denies changing the attributes of a file or folder, for example, &quot;read-only&quot; or &quot;hidden&quot;."/>
                                <TextBlock Text="- The Write Attributes permission does not imply creating or deleting files or folders, it only includes the permission to make changes to the attributes of an existing file or folder."/>
                            </StackPanel>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>

                <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasWriteExtendedAttributes, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Erweiterte Attribute schreiben"/>
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <StackPanel>
                                <TextBlock Text="- Allows or denies changing the extended attributes of a file or folder. Extended attributes are defined by programs and may vary by program."/>
                                <TextBlock Text="- The Write Extended Attributes permission does not imply creating or deleting files or folders, it only includes the permission to make changes to the extended attributes of an existing file or folder."/>
                            </StackPanel>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>

                <StackPanel Grid.Row="3" Grid.Column="2" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasDeleteSubdirectoriesAndFiles, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Unterordner und Dateien löschen"/>
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <TextBlock Text="Allows or denies deleting subfolders and files, even if the Delete permission has not been granted on the subfolder or file."/>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>

                <StackPanel Grid.Row="4" Grid.Column="2" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasDelete, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Löschen"/>
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <TextBlock Text="Allows or denies deleting the file or folder. If you don't have Delete permission on a file or folder, you can still delete it if you have been granted Delete Subfolders and Files on the parent folder."/>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>

                <StackPanel Grid.Row="5" Grid.Column="2" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasReadPermissions, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Berechtigungen lesen"/>
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <TextBlock Text="Allows or denies reading permissions of a file or folder."/>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>

                <StackPanel Grid.Row="6" Grid.Column="2" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasChangePermissions, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Berechtigungen ändern"/>
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <TextBlock Text="Allows or denies changing permissions of the file or folder."/>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>

                <StackPanel Grid.Row="7" Grid.Column="2" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding folderAce.HasTakeOwnership, Mode=OneWay}" IsHitTestVisible="False"/>
                    <TextBlock Text="Besitz übernehmen"/>
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <TextBlock Text="Allows or denies taking ownership of the file or folder. The owner of a file or folder can always change permissions on it, regardless of any existing permissions that protect the file or folder."/>
                        </ToolTip>
                    </StackPanel.ToolTip>
                </StackPanel>

            </Grid>
        </Border>

        <!-- Einzelne NTFS Rechte für jedes einzelne ACE -->
        <Border BorderBrush="{StaticResource ArgesGrauBlau_dunkel}" BorderThickness="2" Padding="10" Margin="0 10 0 0" Height="300">
            <DataGrid ItemsSource="{Binding directoryACEs}" AutoGenerateColumns="False" 
                          IsReadOnly="True" GridLinesVisibility="Horizontal" MinHeight="500">

                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <RotateTransform Angle="270" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="Margin" Value="0 0 0 10"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Width" Value="130"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>

                <DataGrid.Columns>

                    <DataGridTemplateColumn Header="" Width="30">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Width="20" Source="{Binding SID, Converter={x:Static arps:SIDToImageConverter.Instance}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Principal" SortMemberPath="IdentityName">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding IdentityName}" Margin="0 0 30 0" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Typ" SortMemberPath="Type" SortDirection="Descending">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Type}" Value="False">
                                                    <Setter Property="Text" Value="Zulassen"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Type}" Value="True">
                                                    <Setter Property="Text" Value="Verweigern"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Vererbt" Width="30" SortMemberPath="IsInherited">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Width="20" Height="20" Source="{StaticResource Img_Checkmark}">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger  Binding="{Binding IsInherited}" Value="False">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger >
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Vollzugriff" Width="30" SortMemberPath="HasFullControl">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Width="20" Height="20" Source="{StaticResource Img_Checkmark}">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger  Binding="{Binding HasFullControl}" Value="False">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsInherited}" Value="True">
                                                    <Setter Property="Opacity" Value="0.3"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Ändern" Width="30" SortMemberPath="HasModify">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Width="20" Height="20" Source="{StaticResource Img_Checkmark}">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger  Binding="{Binding HasModify}" Value="False">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger >
                                                <DataTrigger Binding="{Binding IsInherited}" Value="True">
                                                    <Setter Property="Opacity" Value="0.3"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Lesen, Ausführen" Width="30" SortMemberPath="HasReadAndExecute">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Width="20" Height="20" Source="{StaticResource Img_Checkmark}">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger  Binding="{Binding HasReadAndExecute}" Value="False">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger >
                                                <DataTrigger Binding="{Binding IsInherited}" Value="True">
                                                    <Setter Property="Opacity" Value="0.3"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Schreiben" Width="30" SortMemberPath="HasWrite">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Width="20" Height="20" Source="{StaticResource Img_Checkmark}">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger  Binding="{Binding HasWrite}" Value="False">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger >
                                                <DataTrigger Binding="{Binding IsInherited}" Value="True">
                                                    <Setter Property="Opacity" Value="0.3"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Lesen" Width="30" SortMemberPath="HasRead">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Width="20" Height="20" Source="{StaticResource Img_Checkmark}">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger  Binding="{Binding HasRead}" Value="False">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger >
                                                <DataTrigger Binding="{Binding IsInherited}" Value="True">
                                                    <Setter Property="Opacity" Value="0.3"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Ordnerinhalt anzeigen" Width="30" SortMemberPath="HasListDirectory">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Width="20" Height="20" Source="{StaticResource Img_Checkmark}">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger  Binding="{Binding HasListDirectory}" Value="False">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger >
                                                <DataTrigger Binding="{Binding IsInherited}" Value="True">
                                                    <Setter Property="Opacity" Value="0.3"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Anwenden auf" SortMemberPath="Propagation">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Propagation}" Margin="30 0 0 0" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    

                </DataGrid.Columns>
            </DataGrid>
        </Border>

    </StackPanel>
</controls:MetroWindow>
