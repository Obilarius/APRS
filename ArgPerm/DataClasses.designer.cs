#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArgPerm
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ArgesPerm")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertdir(dir instance);
    partial void Updatedir(dir instance);
    partial void Deletedir(dir instance);
    partial void Insertaduser(aduser instance);
    partial void Updateaduser(aduser instance);
    partial void Deleteaduser(aduser instance);
    partial void Insertaduser_has_grp(aduser_has_grp instance);
    partial void Updateaduser_has_grp(aduser_has_grp instance);
    partial void Deleteaduser_has_grp(aduser_has_grp instance);
    partial void Insertadgroup(adgroup instance);
    partial void Updateadgroup(adgroup instance);
    partial void Deleteadgroup(adgroup instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::ArgPerm.Properties.Settings.Default.ArgesPermConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<dir> dirs
		{
			get
			{
				return this.GetTable<dir>();
			}
		}
		
		public System.Data.Linq.Table<aduser> adusers
		{
			get
			{
				return this.GetTable<aduser>();
			}
		}
		
		public System.Data.Linq.Table<aduser_has_grp> aduser_has_grps
		{
			get
			{
				return this.GetTable<aduser_has_grp>();
			}
		}
		
		public System.Data.Linq.Table<adgroup> adgroups
		{
			get
			{
				return this.GetTable<adgroup>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="argarm.dirs")]
	public partial class dir : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Hash;
		
		private string _Directory;
		
		private string _IdentityReference;
		
		private string _AccessControlType;
		
		private string _FileSystemRights;
		
		private short _IsInherited;
		
		private int _Level;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHashChanging(string value);
    partial void OnHashChanged();
    partial void OnDirectoryChanging(string value);
    partial void OnDirectoryChanged();
    partial void OnIdentityReferenceChanging(string value);
    partial void OnIdentityReferenceChanged();
    partial void OnAccessControlTypeChanging(string value);
    partial void OnAccessControlTypeChanged();
    partial void OnFileSystemRightsChanging(string value);
    partial void OnFileSystemRightsChanged();
    partial void OnIsInheritedChanging(short value);
    partial void OnIsInheritedChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    #endregion
		
		public dir()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hash", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this.OnHashChanging(value);
					this.SendPropertyChanging();
					this._Hash = value;
					this.SendPropertyChanged("Hash");
					this.OnHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Directory", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Directory
		{
			get
			{
				return this._Directory;
			}
			set
			{
				if ((this._Directory != value))
				{
					this.OnDirectoryChanging(value);
					this.SendPropertyChanging();
					this._Directory = value;
					this.SendPropertyChanged("Directory");
					this.OnDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityReference", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IdentityReference
		{
			get
			{
				return this._IdentityReference;
			}
			set
			{
				if ((this._IdentityReference != value))
				{
					this.OnIdentityReferenceChanging(value);
					this.SendPropertyChanging();
					this._IdentityReference = value;
					this.SendPropertyChanged("IdentityReference");
					this.OnIdentityReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessControlType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccessControlType
		{
			get
			{
				return this._AccessControlType;
			}
			set
			{
				if ((this._AccessControlType != value))
				{
					this.OnAccessControlTypeChanging(value);
					this.SendPropertyChanging();
					this._AccessControlType = value;
					this.SendPropertyChanged("AccessControlType");
					this.OnAccessControlTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSystemRights", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string FileSystemRights
		{
			get
			{
				return this._FileSystemRights;
			}
			set
			{
				if ((this._FileSystemRights != value))
				{
					this.OnFileSystemRightsChanging(value);
					this.SendPropertyChanging();
					this._FileSystemRights = value;
					this.SendPropertyChanged("FileSystemRights");
					this.OnFileSystemRightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInherited", DbType="SmallInt NOT NULL")]
		public short IsInherited
		{
			get
			{
				return this._IsInherited;
			}
			set
			{
				if ((this._IsInherited != value))
				{
					this.OnIsInheritedChanging(value);
					this.SendPropertyChanging();
					this._IsInherited = value;
					this.SendPropertyChanged("IsInherited");
					this.OnIsInheritedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="argarm.adusers")]
	public partial class aduser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SID;
		
		private string _DisplayName;
		
		private string _SamAccountName;
		
		private string _DistinguishedName;
		
		private short _Enabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(string value);
    partial void OnSIDChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnSamAccountNameChanging(string value);
    partial void OnSamAccountNameChanged();
    partial void OnDistinguishedNameChanging(string value);
    partial void OnDistinguishedNameChanged();
    partial void OnEnabledChanging(short value);
    partial void OnEnabledChanged();
    #endregion
		
		public aduser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SamAccountName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SamAccountName
		{
			get
			{
				return this._SamAccountName;
			}
			set
			{
				if ((this._SamAccountName != value))
				{
					this.OnSamAccountNameChanging(value);
					this.SendPropertyChanging();
					this._SamAccountName = value;
					this.SendPropertyChanged("SamAccountName");
					this.OnSamAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistinguishedName", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string DistinguishedName
		{
			get
			{
				return this._DistinguishedName;
			}
			set
			{
				if ((this._DistinguishedName != value))
				{
					this.OnDistinguishedNameChanging(value);
					this.SendPropertyChanging();
					this._DistinguishedName = value;
					this.SendPropertyChanged("DistinguishedName");
					this.OnDistinguishedNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="SmallInt NOT NULL")]
		public short Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="argarm.aduser_has_grp")]
	public partial class aduser_has_grp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _userSID;
		
		private string _groupSID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserSIDChanging(string value);
    partial void OnuserSIDChanged();
    partial void OngroupSIDChanging(string value);
    partial void OngroupSIDChanged();
    #endregion
		
		public aduser_has_grp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userSID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string userSID
		{
			get
			{
				return this._userSID;
			}
			set
			{
				if ((this._userSID != value))
				{
					this.OnuserSIDChanging(value);
					this.SendPropertyChanging();
					this._userSID = value;
					this.SendPropertyChanged("userSID");
					this.OnuserSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupSID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string groupSID
		{
			get
			{
				return this._groupSID;
			}
			set
			{
				if ((this._groupSID != value))
				{
					this.OngroupSIDChanging(value);
					this.SendPropertyChanging();
					this._groupSID = value;
					this.SendPropertyChanged("groupSID");
					this.OngroupSIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="argarm.adgroups")]
	public partial class adgroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SID;
		
		private string _SamAccountName;
		
		private string _DistinguishedName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(string value);
    partial void OnSIDChanged();
    partial void OnSamAccountNameChanging(string value);
    partial void OnSamAccountNameChanged();
    partial void OnDistinguishedNameChanging(string value);
    partial void OnDistinguishedNameChanged();
    #endregion
		
		public adgroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SamAccountName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SamAccountName
		{
			get
			{
				return this._SamAccountName;
			}
			set
			{
				if ((this._SamAccountName != value))
				{
					this.OnSamAccountNameChanging(value);
					this.SendPropertyChanging();
					this._SamAccountName = value;
					this.SendPropertyChanged("SamAccountName");
					this.OnSamAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistinguishedName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DistinguishedName
		{
			get
			{
				return this._DistinguishedName;
			}
			set
			{
				if ((this._DistinguishedName != value))
				{
					this.OnDistinguishedNameChanging(value);
					this.SendPropertyChanging();
					this._DistinguishedName = value;
					this.SendPropertyChanged("DistinguishedName");
					this.OnDistinguishedNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
